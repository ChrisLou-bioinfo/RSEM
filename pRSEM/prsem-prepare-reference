#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use FindBin;
use lib $FindBin::RealBin;
use lib "$FindBin::RealBin/../";
use rsem_perl_utils;

use Env qw(@PATH);
@PATH = ($FindBin::RealBin, @PATH);


sub main {
  my ($bowtie_path, $bowtie2_path, $quiet) = ('')x3;

  GetOptions( "bowtie-path=s"  => \$bowtie_path,
              "bowtie2-path=s" => \$bowtie2_path,
              "quiet"          => \$quiet );

  my $command = '';

  my ($bw_path, $bw_build, $bw_inspect) = getBowtieBins($bowtie_path, 
                                                        $bowtie2_path);

  ## run bowtie-build/bowtie2-build for index whole genome for ChIP-seq
  ## use --offrate=3, which is 2 less than the default value 5
  ## will trade ~1.5 time memory for 1/4 alignment time for human genome
  $command = "$bw_path/$bw_build -o 3 ";
  if ( $quiet ) { 
    $command .= ' -q ';
  }
  $command .= $ARGV[0] . " $ARGV[1]_prsem";
  &runCommand($command);


  ## run bowtie-inspect/bowtie2-inspect to prepare a .ref for peak calling
  $command = "$bw_path/$bw_inspect -s $ARGV[1]_prsem";
  my $fout_bowtie_ref = "$ARGV[1]_prsem.ref";
  getBowtieRef($command, $fout_bowtie_ref);
}


sub getBowtieBins {
  my ( $bowtie_path, $bowtie2_path ) = @_;
  my ( $bw_path, $bw_build, $bw_inspect ) = ('') x 3;
  if ( $bowtie_path ne '' ) {
    $bw_path    = $bowtie_path;
    $bw_build   = 'bowtie-build';
    $bw_inspect = 'bowtie-inspect';
  } elsif ( $bowtie2_path ne '') {
    $bw_path    = $bowtie2_path;
    $bw_build   = 'bowtie2-build';
    $bw_inspect = 'bowtie2-inspect';
  }
  return ($bw_path, $bw_build, $bw_inspect);
}


sub getBowtieRef {
  my ($command, $fout_bowtie_ref) = @_;
  my $size = 0;
  my @lengths = ();
  my @chroms = ();

  print "\n$command\n\n";
  my $output = `$command`;

  my @lines = split("\n", $output);
  
  foreach my $line (@lines) {
    if ($line =~ /^Sequence\-/) {
      $size++;
      my @words  = split("\t", $line);
      push @chroms, $words[1];
      push @lengths, $words[2];
    }
  }
  
  open(OUTPUT, ">$fout_bowtie_ref") or die "can't open file: $!\n";
  print OUTPUT "$size\n@lengths\n@chroms\n";
  close OUTPUT or die "can't close file: $!\n";
}

main();
